#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main


    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
            echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
            echo -e "====================🧊固件信息🧊=======================\n" \
                 "➦ 📒 固件名称：Redmi_AX5\n" \
                 "➦ 💻 固件平台：Redmi_AX5\n" \
                 "➦ ⚽ 固件源码：coolsnowwolf/lede\n" \
                 "➦ 💝 源码分支：master\n" \
                 "➦ 🌐 默认地址：192.168.1.1\n" \
                 "➦ 🔑 默认密码：password" > release.txt
            echo "status=success" >> $GITHUB_OUTPUT
            
    - name: Generate firmware information
      run: |
        echo -e "====================🧊固件信息🧊=======================\n" \
             "➦ 📒 固件名称：Redmi_AX5\n" \
             "➦ 💻 固件平台：Redmi_AX5\n" \
             "➦ ⚽ 固件源码：coolsnowwolf/lede\n" \
             "➦ 💝 源码分支：master\n" \
             "➦ 🌐 默认地址：192.168.1.1\n" \
             "➦ 🔑 默认密码：password" > firmware_info.txt
        echo "FIRMWARE_INFO_PATH=firmware_info.txt" >> $GITHUB_ENV
    
    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          ${{ env.FIRMWARE }}/*
          ${{ env.FIRMWARE_INFO_PATH }}

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
